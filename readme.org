#+title: Search through the Browser history, in Emacs

** Description
Browsers usually keep their history in a sqlite database, and it's trivial to extract it. This package allows you to search through your browser history by URL and the Page Title.
** Requirements
*Emacs 29*

I'm sorry, I wrote the initial prototype in the Emacs instance I use myself. Only later I realized that the built-in sqlite support was added only in Emacs 29 and some changes are required to use the package in previous versions.

** How to use it
*** 1. Install the package using your favorite package manager.
*** 2. Set the mandatory variable(s)
- =browser-hist-default-browser= - set this var, the package doesn't know yet how to resolve the default browser automatically

  example:
  #+begin_src elisp
  (setq browser-hist-default-browser 'chrome)
  #+end_src

- You may also have to set =browser-hist-db-paths= although it should resolve the paths automatically. If =browser-hist-search= command won't work, first thing I would suggest is to check the values that var holds and make sure that the path to the DB is correct. You can set it explicitly, e.g.,

  #+begin_src elisp
  (setq browser-hist-db-paths
        '((chrome . "$HOME/Library/Application Support/Google/Chrome/Default/History")
          (brave . "$HOME/Library/Application Support/BraveSoftware/Brave-Browser/Default/History")
          (firefox . "$HOME/Library/Application Support/Firefox/Profiles/*.default-release/places.sqlite")))
  #+end_src

  You may even ignore the browsers you don't use; right now the package works only with a single browser. I'm considering adding data retrieval for multiple browsers at some point.

**** Important note for Safari (Mac) users
Make sure that Emacs has Full Disk Access. Otherwise, the system won't even let it touch the file. Go to *Preferences -> Privacy & Security -> Full Disk Access*, and add Emacs. Make sure Emacs has access to the folder, run =M-x find-file= and navigate to ~$HOME/Library/Safari/~ - it should let you.

*** 3. Try it
There's only one command =browser-hist-search=, try it and see if it works.

** Status: experimental
I just created it, and it has many rough edges. Still, any feedback is appreciated.
** FAQ
*** What's the point? Why even have this if you can do it in the browser?
- It's convenient and a bit faster to bind the command to a key.
- And then, using an [[https://github.com/oantolin/embark][Embark]] Action you can open the link in EWW, in XWidget, or any other browser (not necessarily the history origin one).
- You can also narrow the search and export the results into a separate buffer using Embark Collect.
- It opens some other possibilities like sending a link to a browser but forcing it to find the tab (if there's an open one already, e.g., why open another GMail tab?) /I'll share an example of how this could be done using Applescript/.
  Or maybe open the link in a private tab of a chosen browser.
- I'm also hoping at some point to collect data from multiple browsers.
*** How come when I type, it highlights within URLs, but not titles
see: https://github.com/agzam/browser-hist.el/issues/7
